---
#########################################
#            _             _ _          #
#           | |           (_) |         #
#           | | __ ___   ___| | __      #
#       _   | |/ _` \ \ / / | |/ /      #
#      | |__| | (_| |\ V /| |   <       #
#       \____/ \__,_| \_/ |_|_|\_\      #
#                                       #
#########################################

- name: "Set managed config files in {{ wireguard_config_dir }} for cleanup"
  ansible.builtin.set_fact:
    managed_confs: |
      {{ ( wireguard_interfaces | map(attribute='name') | product(['.conf']) | map('join') | list ) + ( wireguard_interfaces | map(attribute='name') | product(['_private.key']) | map('join') | list ) + ( wireguard_interfaces | map(attribute='name') | product(['_public.key']) | map('join') | list )}}

- name: "Find unmanaged config files in {{ wireguard_config_dir }}"
  ansible.builtin.find:
    paths: "{{ wireguard_config_dir }}"
  register: wireguard_config_contents

- name: "Find wg.conf files in {{ wireguard_config_dir }}"
  ansible.builtin.find:
    paths: "{{ wireguard_config_dir }}"
    patterns: "*.conf"
  register: wg_config_contents

- name: "Perform wg-quick down for unmanaged WireGuard interfaces"
  ansible.builtin.shell:
    cmd: "wg-quick down {{ item.split('.') | first }}"
  loop: "{{ wg_config_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_confs

- name: "Reload systemd"
  ansible.builtin.systemd:
    daemon_reload: true
  loop: "{{ wg_config_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_confs

- name: "Remove unmanaged config files in {{ wireguard_config_dir }}"
  ansible.builtin.file:
    path: "{{ wireguard_config_dir }}/{{ item }}"
    state: absent
  loop: "{{ wireguard_config_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_confs
